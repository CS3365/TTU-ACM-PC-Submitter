/*
 * The MIT License
 *
 * Copyright 2011 Austin.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package PCC;

/**
 *
 * @author Austin
 */
<<<<<<< HEAD
import PCS.Problem;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
=======



>>>>>>> 45ba941869faeca6d9bb6d45b6d4e42f999f6154

public class MainWindow extends javax.swing.JFrame {

  private PCCMain main;
  private ArrayList<Problem> problems;

  /** Creates new form MainWindow */
  public MainWindow(PCCMain main) {
    this.main = main;
    initComponents();
    this.setLocationRelativeTo(null);
  }

  public void setProblemsList(ArrayList<Problem> problems) {
    this.problems = problems;

    // update the list of problems in problemList
    problemList.setModel(new DefaultComboBoxModel(problems.toArray()));
    problemDescription.setText(problems.get(0).getDescription());
    pointValue.setText("" + problems.get(0).getPointValue());

    // create the ProblemPanels`
    int y = 0, height = 40;
    panelWithProblemPanels.setPreferredSize(new Dimension(
        panelWithProblemPanels.getSize().width,
        height * problems.size()));
    Rectangle bounds = new Rectangle(0, 0,
        problemScrollPane.getWidth(),
        height);
    ProblemPanel pPanel;
    for (Problem problem : problems) {
      bounds.y = y;
      pPanel = new ProblemPanel(problem);
      pPanel.setBounds(bounds);
      y += height;
      System.out.println("Adding ProblemPanel for: " + problem.getProblemTitle());
      panelWithProblemPanels.add(pPanel);
    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        MainTabbedPane = new javax.swing.JTabbedPane();
        SubmissionsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        problemDescription = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pointValue = new javax.swing.JTextField();
        problemList = new javax.swing.JComboBox();
        problemScrollPane = new javax.swing.JScrollPane();
        panelWithProblemPanels = new javax.swing.JPanel();
        LeaderboardPanel = new javax.swing.JPanel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Problem List");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        problemDescription.setColumns(10);
        problemDescription.setLineWrap(true);
        problemDescription.setRows(5);
        problemDescription.setText("     Please select a problem from the problem list to see it's description.");
        problemDescription.setWrapStyleWord(true);
        jScrollPane2.setViewportView(problemDescription);

        jLabel2.setText("Problem Description");

        jLabel3.setText("Point Value");

        pointValue.setEditable(false);
        pointValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointValueActionPerformed(evt);
            }
        });

        problemList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please Select a Problem...", "Problem 1", "Problem 2" }));
        problemList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                problemListItemStateChanged(evt);
            }
        });

        problemScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        javax.swing.GroupLayout panelWithProblemPanelsLayout = new javax.swing.GroupLayout(panelWithProblemPanels);
        panelWithProblemPanels.setLayout(panelWithProblemPanelsLayout);
        panelWithProblemPanelsLayout.setHorizontalGroup(
            panelWithProblemPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 613, Short.MAX_VALUE)
        );
        panelWithProblemPanelsLayout.setVerticalGroup(
            panelWithProblemPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 321, Short.MAX_VALUE)
        );

        problemScrollPane.setViewportView(panelWithProblemPanels);

        javax.swing.GroupLayout SubmissionsPanelLayout = new javax.swing.GroupLayout(SubmissionsPanel);
        SubmissionsPanel.setLayout(SubmissionsPanelLayout);
        SubmissionsPanelLayout.setHorizontalGroup(
            SubmissionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubmissionsPanelLayout.createSequentialGroup()
                .addGroup(SubmissionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(SubmissionsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(77, 77, 77))
                    .addGroup(SubmissionsPanelLayout.createSequentialGroup()
                        .addComponent(problemList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(SubmissionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SubmissionsPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel3))
                    .addGroup(SubmissionsPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(pointValue, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(problemScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
        );
        SubmissionsPanelLayout.setVerticalGroup(
            SubmissionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubmissionsPanelLayout.createSequentialGroup()
                .addGroup(SubmissionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SubmissionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pointValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(problemList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(problemScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
        );

        MainTabbedPane.addTab("Submissions", SubmissionsPanel);

        javax.swing.GroupLayout LeaderboardPanelLayout = new javax.swing.GroupLayout(LeaderboardPanel);
        LeaderboardPanel.setLayout(LeaderboardPanelLayout);
        LeaderboardPanelLayout.setHorizontalGroup(
            LeaderboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 617, Short.MAX_VALUE)
        );
        LeaderboardPanelLayout.setVerticalGroup(
            LeaderboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 385, Short.MAX_VALUE)
        );

        MainTabbedPane.addTab("Leaderboard", LeaderboardPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pointValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointValueActionPerformed
      // TODO add your handling code here:
    }//GEN-LAST:event_pointValueActionPerformed

    private void problemListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_problemListItemStateChanged
      // TODO add your handling code here:
      Problem selectedProblem =
          problems.get(problemList.getSelectedIndex());
      problemDescription.setText(selectedProblem.getDescription());
      pointValue.setText("" + selectedProblem.getPointValue());
    }//GEN-LAST:event_problemListItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LeaderboardPanel;
    private javax.swing.JTabbedPane MainTabbedPane;
    private javax.swing.JPanel SubmissionsPanel;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelWithProblemPanels;
    private javax.swing.JTextField pointValue;
    private javax.swing.JTextArea problemDescription;
    private javax.swing.JComboBox problemList;
    private javax.swing.JScrollPane problemScrollPane;
    // End of variables declaration//GEN-END:variables
}
